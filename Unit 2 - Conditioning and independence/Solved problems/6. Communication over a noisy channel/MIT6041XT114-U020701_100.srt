1
00:00:00,000 --> 00:00:00,600

2
00:00:00,600 --> 00:00:01,480
Hi.

3
00:00:01,480 --> 00:00:03,990
In this problem, we'll be
talking about communication

4
00:00:03,990 --> 00:00:05,790
across a noisy channel.

5
00:00:05,790 --> 00:00:08,520
But before we dive into the
problem itself, I wanted to

6
00:00:08,520 --> 00:00:12,340
first motivate the context a
little bit and talk more about

7
00:00:12,340 --> 00:00:14,900
what exactly a communication
channel is and

8
00:00:14,900 --> 00:00:16,430
what "noise" means.

9
00:00:16,430 --> 00:00:19,690
So in our everyday life,
we deal with a lot of

10
00:00:19,690 --> 00:00:22,790
communication channels, for
example, the internet, where

11
00:00:22,790 --> 00:00:28,610
we download data and we watch
videos online, or even just

12
00:00:28,610 --> 00:00:29,980
talking to a friend.

13
00:00:29,980 --> 00:00:32,210
And the air could be
your communication

14
00:00:32,210 --> 00:00:33,680
channel for our voice.

15
00:00:33,680 --> 00:00:36,970
But as you probably have
experienced, sometimes these

16
00:00:36,970 --> 00:00:39,900
channels have noise, which
just means that what the

17
00:00:39,900 --> 00:00:42,950
sender was trying to send isn't
necessarily exactly what

18
00:00:42,950 --> 00:00:44,630
the receiver receives.

19
00:00:44,630 --> 00:00:50,070
And so in probability, we try
to model these communication

20
00:00:50,070 --> 00:00:53,350
channels and noise and
try to understand the

21
00:00:53,350 --> 00:00:55,740
probability behind it.

22
00:00:55,740 --> 00:00:58,585
And so now, let's go into
the problem itself.

23
00:00:58,585 --> 00:01:00,860
In this problem, we're dealing
with a pretty simple

24
00:01:00,860 --> 00:01:02,090
communication channel.

25
00:01:02,090 --> 00:01:05,110
It's just a binary channel,
which means that what we're

26
00:01:05,110 --> 00:01:07,400
sending is just one
bit at a time.

27
00:01:07,400 --> 00:01:09,980
And here, a bit just means
either 0 or 1--

28
00:01:09,980 --> 00:01:13,300
so essentially, the simplest
case of information that you

29
00:01:13,300 --> 00:01:14,830
could send.

30
00:01:14,830 --> 00:01:18,710
But sometimes when you send
a 0, the receiver actually

31
00:01:18,710 --> 00:01:21,490
receives a 1 instead,
or vice versa.

32
00:01:21,490 --> 00:01:24,500
And that is where
noise comes in.

33
00:01:24,500 --> 00:01:27,640
So here in this problem, we
actually have a probabilistic

34
00:01:27,640 --> 00:01:31,920
model of this channel and the
noise that hits the channel.

35
00:01:31,920 --> 00:01:35,250

36
00:01:35,250 --> 00:01:40,260
What we're trying to send
is either 0 or a 1.

37
00:01:40,260 --> 00:01:42,810

38
00:01:42,810 --> 00:01:53,760
And what we know is that on
the receiving end, a 0 can

39
00:01:53,760 --> 00:01:58,020
either be received when a 0 is
sent, or a 1 can be received

40
00:01:58,020 --> 00:02:00,490
when a 0 is sent.

41
00:02:00,490 --> 00:02:04,970
And when a 1 is sent, we
could also have noise

42
00:02:04,970 --> 00:02:05,960
that corrupts it.

43
00:02:05,960 --> 00:02:08,190
And you get a 0 instead.

44
00:02:08,190 --> 00:02:14,370
Or you can have a 1 being
successfully transmitted.

45
00:02:14,370 --> 00:02:16,470
And the problem actually
tells us what the

46
00:02:16,470 --> 00:02:18,180
probabilities here are.

47
00:02:18,180 --> 00:02:22,940
So we know that if a 0 is sent,
then with probability 1

48
00:02:22,940 --> 00:02:27,190
minus epsilon naught,
a 0 is received.

49
00:02:27,190 --> 00:02:30,450
And with the remaining
probability, it actually gets

50
00:02:30,450 --> 00:02:32,460
corrupted and turned into a 1.

51
00:02:32,460 --> 00:02:35,760
And similarly, if a 1 is sent,
then with probability 1 minus

52
00:02:35,760 --> 00:02:39,050
epsilon 1, the 1 is correctly
transmitted.

53
00:02:39,050 --> 00:02:42,300
And with the remaining
probability epsilon 1, it's

54
00:02:42,300 --> 00:02:44,460
turned into a 0 instead.

55
00:02:44,460 --> 00:02:47,800
And the last bit of information
is that we know

56
00:02:47,800 --> 00:02:52,530
that with the probability p, any
random bit is actually is

57
00:02:52,530 --> 00:02:54,040
0 that is being sent.

58
00:02:54,040 --> 00:02:56,890
And with probability 1 minus
p, we're actually

59
00:02:56,890 --> 00:02:59,840
trying to send a 1.

60
00:02:59,840 --> 00:03:03,290
So that is the basic setup
for the problem.

61
00:03:03,290 --> 00:03:08,430
And the first part that the
problem asks us to find, what

62
00:03:08,430 --> 00:03:12,310
is the probability of a
successful transmission when

63
00:03:12,310 --> 00:03:18,360
you have just any arbitrary
bit that's being sent.

64
00:03:18,360 --> 00:03:23,660
So what we can do here is, use
this tree that we've already

65
00:03:23,660 --> 00:03:29,240
drawn and identify what are the
cases, the outcomes where

66
00:03:29,240 --> 00:03:32,140
a bit is actually successfully
transmitted.

67
00:03:32,140 --> 00:03:37,850
So if a 0 is sent and a 0
is received, then that

68
00:03:37,850 --> 00:03:40,770
corresponds to a successful
transmission.

69
00:03:40,770 --> 00:03:45,290
Similarly, if a 1 is sent and
a 1 is received, that also

70
00:03:45,290 --> 00:03:48,250
corresponds to a successful
transmission.

71
00:03:48,250 --> 00:03:52,170
And then we can calculate what
these probabilities are,

72
00:03:52,170 --> 00:03:53,540
because we just calculate the

73
00:03:53,540 --> 00:03:55,190
probabilities along the branches.

74
00:03:55,190 --> 00:03:58,360
And so here implicitly, what
we're doing is invoking the

75
00:03:58,360 --> 00:04:00,490
multiplication rule.

76
00:04:00,490 --> 00:04:02,810
So we can calculate the
probabilities of these two

77
00:04:02,810 --> 00:04:05,880
individual outcomes and they
are disjoint outcomes.

78
00:04:05,880 --> 00:04:08,990
So we can actually just sum the
two probabilities to find

79
00:04:08,990 --> 00:04:10,140
the answer.

80
00:04:10,140 --> 00:04:16,170
So the probability here is p
times 1 minus epsilon naught--

81
00:04:16,170 --> 00:04:18,339
that's the probability of
a 0 being successfully

82
00:04:18,339 --> 00:04:19,200
transmitted--

83
00:04:19,200 --> 00:04:26,120
plus 1 minus p times 1 minus
epsilon, 1, which is the

84
00:04:26,120 --> 00:04:28,650
probability that a 1 is
successfully transmitted.

85
00:04:28,650 --> 00:04:32,500
And so what we've done here is
actually just looked at this

86
00:04:32,500 --> 00:04:35,340
kind of diagram, this tree
to find the answer.

87
00:04:35,340 --> 00:04:37,980
What we also could have done
is been a little bit more

88
00:04:37,980 --> 00:04:41,020
methodical maybe and actually
apply the law of total

89
00:04:41,020 --> 00:04:44,000
probability, which is really
what we're trying to do here.

90
00:04:44,000 --> 00:04:46,745
So you can see that this
actually corresponds to--

91
00:04:46,745 --> 00:04:52,560
the p corresponds to the
probability of 0 being sent.

92
00:04:52,560 --> 00:04:59,250
And 1 minus epsilon naught is
the probability of success,

93
00:04:59,250 --> 00:05:01,690
given that a 0 is sent.

94
00:05:01,690 --> 00:05:06,830
And this second term
is analogous.

95
00:05:06,830 --> 00:05:11,100
It's the probability that a 1
was sent times the probability

96
00:05:11,100 --> 00:05:16,970
that you have a success, given
that a 1 was sent.

97
00:05:16,970 --> 00:05:25,190
And this is just an example of
applying the law of total

98
00:05:25,190 --> 00:05:29,020
probability, where we
partitioned into the two cases

99
00:05:29,020 --> 00:05:32,270
of a 0 being sent and a 1 being
sent and calculated the

100
00:05:32,270 --> 00:05:33,820
probabilities for each
of those two cases

101
00:05:33,820 --> 00:05:36,210
and added those up.

102
00:05:36,210 --> 00:05:39,570
So that's kind of a review of
the multiplication rule and

103
00:05:39,570 --> 00:05:40,820
law of total probability.

104
00:05:40,820 --> 00:05:43,500

105
00:05:43,500 --> 00:05:48,800
So now, let's move on to part
B. Part B is asking, what is

106
00:05:48,800 --> 00:05:51,950
the probability that a
particular sequence of bits,

107
00:05:51,950 --> 00:05:55,090
not just a single one, but a
sequence of four bits in a row

108
00:05:55,090 --> 00:05:57,240
is successfully transmitted?

109
00:05:57,240 --> 00:05:59,830
And the sequence that we're
looking for is, 1, 0, 1, 1.

110
00:05:59,830 --> 00:06:02,710

111
00:06:02,710 --> 00:06:05,820
So this is how I'll
denote this event.

112
00:06:05,820 --> 00:06:09,450
1, 0, 1, 1 gets successfully
transmitted into 1, 0, 1, 1.

113
00:06:09,450 --> 00:06:12,690

114
00:06:12,690 --> 00:06:16,180
Now, instead of dealing with
single bits in isolation, we

115
00:06:16,180 --> 00:06:17,420
have a sequence of four bits.

116
00:06:17,420 --> 00:06:20,700
But we can really just break
this out into the four

117
00:06:20,700 --> 00:06:26,730
individual bits and look
at those one by one.

118
00:06:26,730 --> 00:06:30,050
So in order to transmit
successfully 1, 0, 1, 1, that

119
00:06:30,050 --> 00:06:34,210
whole sequence, we first need to
transmit a 1 successfully,

120
00:06:34,210 --> 00:06:38,640
then a 0 successfully, then
another 1 successfully, and

121
00:06:38,640 --> 00:06:40,860
then finally, the last
1 successfully.

122
00:06:40,860 --> 00:06:49,230
So really, this is the same as
the intersection of four

123
00:06:49,230 --> 00:06:57,150
different smaller events, a 1
being successfully transmitted

124
00:06:57,150 --> 00:07:03,310
and a 0 being successfully
transmitted and two more 1's

125
00:07:03,310 --> 00:07:04,560
being successfully
transmitted.

126
00:07:04,560 --> 00:07:07,310

127
00:07:07,310 --> 00:07:12,210
So why are we able to do
this, first of all?

128
00:07:12,210 --> 00:07:15,250
We are using an important
assumption that we make in the

129
00:07:15,250 --> 00:07:21,170
problem that each transmission
of an individual bit has the

130
00:07:21,170 --> 00:07:25,560
same probabilistic structure
so that no matter which bit

131
00:07:25,560 --> 00:07:29,050
you're talking about, they
all have the same error

132
00:07:29,050 --> 00:07:31,770
probability, the same
probabilities of being either

133
00:07:31,770 --> 00:07:37,380
successfully transmitted or
having noise corrupt it.

134
00:07:37,380 --> 00:07:40,230
So because of that, it doesn't
really matter which particular

135
00:07:40,230 --> 00:07:42,400
1 or 0 we're talking about.

136
00:07:42,400 --> 00:07:46,280
And now, we'll make one more
step, and we'll invoke

137
00:07:46,280 --> 00:07:50,050
independence, which is
the third topic here.

138
00:07:50,050 --> 00:07:52,680
And the other important
assumption here we're making

139
00:07:52,680 --> 00:07:56,430
is that every single
bit is independent

140
00:07:56,430 --> 00:07:57,770
from any other bit.

141
00:07:57,770 --> 00:08:02,130
So the fact that this one was
successfully transmitted has

142
00:08:02,130 --> 00:08:06,180
no impact on the probability
of the 0 being successfully

143
00:08:06,180 --> 00:08:07,440
transmitted or not.

144
00:08:07,440 --> 00:08:10,260
And so because of that, we can
now break this down into a

145
00:08:10,260 --> 00:08:12,990
product of four probabilities.

146
00:08:12,990 --> 00:08:16,940
So this becomes the probability
of 1 transmitted

147
00:08:16,940 --> 00:08:22,255
into a 1 times the probability
of 0 transmitted into a 0, 1

148
00:08:22,255 --> 00:08:26,030
to a 1, and 1 to 1.

149
00:08:26,030 --> 00:08:28,610

150
00:08:28,610 --> 00:08:30,990
And that simplifies things,
because we know what each one

151
00:08:30,990 --> 00:08:32,340
of these are.

152
00:08:32,340 --> 00:08:35,170
The probability of 1 being
successful transmitted into a

153
00:08:35,170 --> 00:08:39,280
1, we know that's just
1 minus epsilon 1.

154
00:08:39,280 --> 00:08:42,539
And similarly, probability of
0 being transmitted into a 0

155
00:08:42,539 --> 00:08:44,470
is 1 minus epsilon naught.

156
00:08:44,470 --> 00:08:46,960
So our final answer
then is just--

157
00:08:46,960 --> 00:08:50,500
well, we have three of these
and one of these.

158
00:08:50,500 --> 00:08:55,660
So the answer is going to be 1
minus epsilon naught times 1

159
00:08:55,660 --> 00:08:59,220
minus epsilon 1 to
the third power.

160
00:08:59,220 --> 00:09:05,390

161
00:09:05,390 --> 00:09:10,690
Now, let's move on and go on to
part C, which adds another

162
00:09:10,690 --> 00:09:11,930
wrinkle to the problem.

163
00:09:11,930 --> 00:09:16,110
So now, maybe we're not
satisfied with the success

164
00:09:16,110 --> 00:09:17,630
rate of our current channel.

165
00:09:17,630 --> 00:09:19,110
And we want to improve
it somehow.

166
00:09:19,110 --> 00:09:22,520
And one way of doing this is
to add some redundancy.

167
00:09:22,520 --> 00:09:27,010
So instead of just sending a
single 0 and hoping that it

168
00:09:27,010 --> 00:09:30,140
gets successfully transmitted,
instead what we can do is,

169
00:09:30,140 --> 00:09:34,920
send three 0's in a row to
represent a single 0 and hope

170
00:09:34,920 --> 00:09:38,950
that because we've added some
redundancy, we can somehow

171
00:09:38,950 --> 00:09:43,780
improve our error rates.

172
00:09:43,780 --> 00:09:47,590
So in particular what we're
going to do is, for a 0, when

173
00:09:47,590 --> 00:09:52,780
we want to send a 0, which I'll
put in quotes here, what

174
00:09:52,780 --> 00:09:59,240
we're actually going to send
is a sequence of three 0s.

175
00:09:59,240 --> 00:10:06,500
And what's going to happen is,
this sequence of three 0s,

176
00:10:06,500 --> 00:10:07,910
each one of these bits
is going to go

177
00:10:07,910 --> 00:10:09,320
through the same channel.

178
00:10:09,320 --> 00:10:14,490
So the 0, 0, 0 can stay and get
transmitted successfully

179
00:10:14,490 --> 00:10:15,990
as a 0, 0, 0.

180
00:10:15,990 --> 00:10:21,040
Or maybe the last 0 gets turned
into a 1, or the second

181
00:10:21,040 --> 00:10:25,400
0 gets turned into a 1, or we
can have any one of these

182
00:10:25,400 --> 00:10:30,950
eight possible outcomes
on the receiving end.

183
00:10:30,950 --> 00:10:36,580

184
00:10:36,580 --> 00:10:41,360
And then similarly, for a 1,
when we want to send a 1, what

185
00:10:41,360 --> 00:10:43,050
we'll actually send
is a sequence of

186
00:10:43,050 --> 00:10:46,410
three 1's, three bits.

187
00:10:46,410 --> 00:10:54,230
And just like above, this 1, 1,
1, due to the noise in the

188
00:10:54,230 --> 00:11:01,630
channel, it can get turned into
any one of these eight

189
00:11:01,630 --> 00:11:03,960
sequences on the
receiving end.

190
00:11:03,960 --> 00:11:09,490

191
00:11:09,490 --> 00:11:14,250
So what we're going to do now
is, instead of sending just a

192
00:11:14,250 --> 00:11:16,880
single 0, we'll send three 0s,
and instead of sending a 1,

193
00:11:16,880 --> 00:11:18,130
we'll send three 1s.

194
00:11:18,130 --> 00:11:20,910
But now, the question is, this
is what you'll get on the

195
00:11:20,910 --> 00:11:21,860
receiving end.

196
00:11:21,860 --> 00:11:24,610
How do you interpret--

197
00:11:24,610 --> 00:11:26,790
0, 0, 0, maybe intuitively
you'll say

198
00:11:26,790 --> 00:11:27,960
that's obviously a 0.

199
00:11:27,960 --> 00:11:33,930
But what if you get something
like 0, 1, 0 or 1, 0, 1, when

200
00:11:33,930 --> 00:11:38,250
there's both 0s and 1s in
the received message?

201
00:11:38,250 --> 00:11:38,870
What are you going to do?

202
00:11:38,870 --> 00:11:44,230
So one obvious thing to do is
to take a majority rule.

203
00:11:44,230 --> 00:11:47,900
So because there's three of
them, if there's two or more

204
00:11:47,900 --> 00:11:50,400
0s, we'll say that what
was meant to be sent

205
00:11:50,400 --> 00:11:51,770
was actually a 0.

206
00:11:51,770 --> 00:11:55,840
And if there's two or more 1s,
then we'll interpret that as a

207
00:11:55,840 --> 00:11:58,030
1 being sent.

208
00:11:58,030 --> 00:12:02,130
So in this case, let's look
at the case of 0.

209
00:12:02,130 --> 00:12:04,990
The majority rule here would say
that, well, if 0, 0, 0 was

210
00:12:04,990 --> 00:12:08,540
sent, then the majority is 0s.

211
00:12:08,540 --> 00:12:12,870
And similarly, in these two
cases, 0, 0, 1 or 0, 1, 0, the

212
00:12:12,870 --> 00:12:14,580
majority is also 0s.

213
00:12:14,580 --> 00:12:19,300
And then finally, in this last
case, 1, 0, 0, you get a

214
00:12:19,300 --> 00:12:20,300
majority of 0s.

215
00:12:20,300 --> 00:12:24,030
So in these four received
messages, we'll interpret that

216
00:12:24,030 --> 00:12:27,990
as a 0 have being set.

217
00:12:27,990 --> 00:12:31,760
So part C is asking, given this
majority rule and this

218
00:12:31,760 --> 00:12:35,630
redundancy, what is the
probability that a 0 is

219
00:12:35,630 --> 00:12:38,170
correctly transmitted?

220
00:12:38,170 --> 00:12:41,030
Well, to answer that, we've
already identified these are

221
00:12:41,030 --> 00:12:44,210
the four outcomes, where
a 0 would be correctly

222
00:12:44,210 --> 00:12:45,690
transmitted.

223
00:12:45,690 --> 00:12:49,520
So to find the answer to this
question, all we have to do is

224
00:12:49,520 --> 00:12:52,210
find the probability that a
sequence of 0, 0, 0 gets

225
00:12:52,210 --> 00:12:56,860
turned into one of these
four sequences.

226
00:12:56,860 --> 00:12:58,540
So let's do that.

227
00:12:58,540 --> 00:13:00,890
What is the probability that
a 0, 0, 0 gets turned

228
00:13:00,890 --> 00:13:03,240
into a 0, 0, 0?

229
00:13:03,240 --> 00:13:04,865
Well, that means that
all three of

230
00:13:04,865 --> 00:13:07,290
these 0s had no errors.

231
00:13:07,290 --> 00:13:15,480
So we would have the answer
being 1 minus epsilon 0 cubed,

232
00:13:15,480 --> 00:13:18,250
because all three of these
bits had to have been

233
00:13:18,250 --> 00:13:20,130
successfully transmitted.

234
00:13:20,130 --> 00:13:22,520
Now, let's consider
the other ones.

235
00:13:22,520 --> 00:13:24,500
For example, what's the
probability that a 0, 0, 0

236
00:13:24,500 --> 00:13:26,440
gets turned into a 0, 0, 1?

237
00:13:26,440 --> 00:13:28,560
Well, in this case, we need two
successful transmissions

238
00:13:28,560 --> 00:13:34,370
of 0s, plus one transmission
of 0 that had an error.

239
00:13:34,370 --> 00:13:40,140
So that is going to be 1 minus
epsilon naught squared for the

240
00:13:40,140 --> 00:13:43,720
two successful transmissions of
0, times epsilon naught for

241
00:13:43,720 --> 00:13:46,270
the single one that was wrong.

242
00:13:46,270 --> 00:13:49,470
And if you think about it, that
was only for this case--

243
00:13:49,470 --> 00:13:50,420
0, 0, 1.

244
00:13:50,420 --> 00:13:54,630
But the case where 0, 1, 0 and
1, 0, 0 are the same, because

245
00:13:54,630 --> 00:13:56,980
for all three of these, you
have two successful

246
00:13:56,980 --> 00:14:02,380
transmissions of 0, plus one
that was corrupted with noise.

247
00:14:02,380 --> 00:14:05,730
And so it turns out that all
three of those probabilities

248
00:14:05,730 --> 00:14:06,540
are going to be the same.

249
00:14:06,540 --> 00:14:09,080
So this is our final answer
for this part.

250
00:14:09,080 --> 00:14:14,780

251
00:14:14,780 --> 00:14:22,190
Now, let's move on to part D.
Part D is asking now a type of

252
00:14:22,190 --> 00:14:23,340
inference problem.

253
00:14:23,340 --> 00:14:24,780
And we'll talk more
about inference

254
00:14:24,780 --> 00:14:27,310
later on in this course.

255
00:14:27,310 --> 00:14:28,870
The purpose of this problem--

256
00:14:28,870 --> 00:14:37,310
what it's asking is, suppose
you received a 1, 0, 1.

257
00:14:37,310 --> 00:14:40,940
That's the sequence of
three messages, three

258
00:14:40,940 --> 00:14:42,990
bits that you received.

259
00:14:42,990 --> 00:14:48,640
Given that you received a 1, 0,
1, what's the probability

260
00:14:48,640 --> 00:14:51,800
that 0 was actually the thing
that was being sent.

261
00:14:51,800 --> 00:14:54,330

262
00:14:54,330 --> 00:15:00,680
So if you look at this, you'll
look at it and say, this looks

263
00:15:00,680 --> 00:15:03,510
like something where we
can apply Bayes' rule.

264
00:15:03,510 --> 00:15:05,030
So that's the fourth
thing that we're

265
00:15:05,030 --> 00:15:06,610
covering in this problem.

266
00:15:06,610 --> 00:15:10,740
And if you apply Bayes' rule,
what you'll get is, this is

267
00:15:10,740 --> 00:15:15,832
equal to the probability of 0
times the probability of 1, 0,

268
00:15:15,832 --> 00:15:21,250
1 being received, given that 0
was what was sent, divided by

269
00:15:21,250 --> 00:15:25,930
the probability that 1,
0, 1 is received.

270
00:15:25,930 --> 00:15:29,590
So we have this basic
structure.

271
00:15:29,590 --> 00:15:32,860
And we also know that we can
use the law of total

272
00:15:32,860 --> 00:15:35,310
probability again on
this denominator.

273
00:15:35,310 --> 00:15:38,970
So we know that the probability
that 1, 0, 1 is

274
00:15:38,970 --> 00:15:44,570
received is equal to the
probability of 0 being sent

275
00:15:44,570 --> 00:15:48,570
times probability of 1, 0, 1
being received, given that 0

276
00:15:48,570 --> 00:15:53,840
was sent, plus the probability
that 1 was sent times the

277
00:15:53,840 --> 00:15:56,150
probability that 1,
0, 1 is received,

278
00:15:56,150 --> 00:15:58,780
given that 1 is sent.

279
00:15:58,780 --> 00:16:02,240
And as you'll notice in
applications of Bayes' rule,

280
00:16:02,240 --> 00:16:05,610
usually what you'll have is a
numerator is then repeated as

281
00:16:05,610 --> 00:16:08,615
one of the terms in the
denominator, because it's just

282
00:16:08,615 --> 00:16:12,010
an application of total
probability.

283
00:16:12,010 --> 00:16:15,010
So if you put these pieces
together, really, what we need

284
00:16:15,010 --> 00:16:20,700
is just these four terms.

285
00:16:20,700 --> 00:16:23,660
Once we have those four terms,
we can just plug them into

286
00:16:23,660 --> 00:16:26,530
this equation, and we'll
have our answer.

287
00:16:26,530 --> 00:16:29,520
So let's figure out what
those four terms are.

288
00:16:29,520 --> 00:16:31,450
The probability of 0
being sent-- well,

289
00:16:31,450 --> 00:16:32,560
we said that earlier.

290
00:16:32,560 --> 00:16:37,420
Probability of 0 being
sent is just p.

291
00:16:37,420 --> 00:16:45,440
And the probability of 1 being
sent is 1 minus p.

292
00:16:45,440 --> 00:16:47,080
That's just from the
model that we're

293
00:16:47,080 --> 00:16:48,890
given in the problem.

294
00:16:48,890 --> 00:16:50,970
Now, let's figure
out this part.

295
00:16:50,970 --> 00:16:56,460
What is the probability of a 1,
0, 1 being received, given

296
00:16:56,460 --> 00:17:00,690
that 0 was sent?

297
00:17:00,690 --> 00:17:04,420
So if 0 was sent, then we know
that what really was sent was

298
00:17:04,420 --> 00:17:07,490
0, 0, 0, that sequence
of three bits.

299
00:17:07,490 --> 00:17:09,990
And now, what's the probability
that 0, 0, 0 got

300
00:17:09,990 --> 00:17:14,440
turned into 1, 0, 1?

301
00:17:14,440 --> 00:17:16,839
Well, in this case, what we
have is one successful

302
00:17:16,839 --> 00:17:22,230
transmission of a 0, plus two
failed transmission of a 0.

303
00:17:22,230 --> 00:17:26,000
So that one successful
transmission of a 0, that

304
00:17:26,000 --> 00:17:30,000
probability is 1 minus
epsilon naught.

305
00:17:30,000 --> 00:17:32,840
And now, we have two failed
transmissions of a 0.

306
00:17:32,840 --> 00:17:37,930
So we have to multiply that
by epsilon naught squared.

307
00:17:37,930 --> 00:17:41,870
And now, for the last piece,
what's the probability of

308
00:17:41,870 --> 00:17:47,040
receiving the 1, 0, 1, given
that 1 was actually sent?

309
00:17:47,040 --> 00:17:49,680
Well, in that case, if a 1 was
sent, what was really sent was

310
00:17:49,680 --> 00:17:51,470
a sequence of three 1s.

311
00:17:51,470 --> 00:17:54,810
And now, we want the probability
that a 1, 1, 1 got

312
00:17:54,810 --> 00:17:56,480
turned into a 1, 0, 1.

313
00:17:56,480 --> 00:17:58,620
In this case, we have two
successful transmissions of

314
00:17:58,620 --> 00:18:01,620
the 1 with one failed
transmission.

315
00:18:01,620 --> 00:18:04,240
So the two successful
transmissions will have 1

316
00:18:04,240 --> 00:18:06,250
minus epsilon 1 squared.

317
00:18:06,250 --> 00:18:08,080
And then the one failed
transmission will give us an

318
00:18:08,080 --> 00:18:11,380
extra term of epsilon 1.

319
00:18:11,380 --> 00:18:16,820
So just for completeness, let's
actually write out what

320
00:18:16,820 --> 00:18:18,340
this final answer would be.

321
00:18:18,340 --> 00:18:20,930
So probability of 0 is p.

322
00:18:20,930 --> 00:18:25,950
Probability of 1, 0, 1, given 0
is, we calculated that as 1

323
00:18:25,950 --> 00:18:30,090
minus epsilon naught times
epsilon naught squared.

324
00:18:30,090 --> 00:18:31,860
The same term appears again
in the denominator.

325
00:18:31,860 --> 00:18:36,610

326
00:18:36,610 --> 00:18:43,410
Plus the other term is,
probability of 1 times the

327
00:18:43,410 --> 00:18:48,540
probability of 1,
0, 1, given 1.

328
00:18:48,540 --> 00:18:53,280
So that is 1 minus epsilon
squared times epsilon 1.

329
00:18:53,280 --> 00:18:55,010
So that is our final answer.

330
00:18:55,010 --> 00:18:59,980
And it's really just a
application of Bayes' rule.

331
00:18:59,980 --> 00:19:05,030
So this was a nice problem,
because it represents a real

332
00:19:05,030 --> 00:19:07,440
world phenomenon that happens.

333
00:19:07,440 --> 00:19:10,570
And we can see that you can
apply a pretty simple

334
00:19:10,570 --> 00:19:13,380
probabilistic model to it and
still be able to answer some

335
00:19:13,380 --> 00:19:14,530
interesting questions.

336
00:19:14,530 --> 00:19:18,700
And there are other extensions
that you can ask also.

337
00:19:18,700 --> 00:19:22,320
For example, we've talked about
adding redundancy by

338
00:19:22,320 --> 00:19:25,140
tripling the number of bits,
but tripling the number of

339
00:19:25,140 --> 00:19:29,780
bits also reduces the
throughput, because instead of

340
00:19:29,780 --> 00:19:33,160
sending one, you have to send
three bits just to send one.

341
00:19:33,160 --> 00:19:37,840
So if there's a cost of that, at
what point does the benefit

342
00:19:37,840 --> 00:19:42,770
of having lower error outweigh
the cost of having to send

343
00:19:42,770 --> 00:19:43,800
more things?

344
00:19:43,800 --> 00:19:47,220
And so that's a question that
you can answer with some more

345
00:19:47,220 --> 00:19:48,960
tools in probability.

346
00:19:48,960 --> 00:19:51,030
So we hope you enjoyed
this problem.

347
00:19:51,030 --> 00:19:52,670
And we'll see you
again next time.

348
00:19:52,670 --> 00:19:54,834